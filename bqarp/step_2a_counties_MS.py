__author__ = 'Maddie Sovich'
__author__ = 'Lauren Makely'

# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# step_2a_counties_MS.py
# Created on: 2016-10-24 14:05:36.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: step_2a_counties_MS <Local_County_Layer>
#                            <Census_County_Layer>
#                            <Name_Fields__replace_CTYNAME_if_necessary_>
#                            <Temporary_Output_File>
#                            <Output_Discrepancy_File>
# Description: This one seems to add ALL the needed fields and not just the initially needed fields.
# Ask MS if this is the one to use (probs, since I'm thinking those are initials not the state MS).
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy

# Script arguments
Local_County_Layer = arcpy.GetParameterAsText(0)
if Local_County_Layer == '#' or not Local_County_Layer:
    Local_County_Layer = "local_places_49001" # provide a default value if unspecified

Census_County_Layer = arcpy.GetParameterAsText(1)
if Census_County_Layer == '#' or not Census_County_Layer:
    Census_County_Layer = "census_places_49001" # provide a default value if unspecified

Name_Fields__replace_CTYNAME_if_necessary_ = arcpy.GetParameterAsText(2)
if Name_Fields__replace_CTYNAME_if_necessary_ == '#' or not Name_Fields__replace_CTYNAME_if_necessary_:
    Name_Fields__replace_CTYNAME_if_necessary_ = "CTYNAME <> NAME" # provide a default value if unspecified

Temporary_Output_File = arcpy.GetParameterAsText(3)
if Temporary_Output_File == '#' or not Temporary_Output_File:
    Temporary_Output_File = "R:\\CARP\\BQARP\\TestModel\\discrepancies_temp" # provide a default value if unspecified

Output_Discrepancy_File = arcpy.GetParameterAsText(4)
if Output_Discrepancy_File == '#' or not Output_Discrepancy_File:
    Output_Discrepancy_File = "C:\\Documents and Settings\\snedi001\\My Documents\\ArcGIS\\Default.gdb\\discrepancies" # provide a default value if unspecified

# Local variables:
county_union = "in_memory\\places_union"
counties_select = "in_memory\\places_select"
counties_select_Singlepart = "\\\\it172oafs-oa10\\HOME_S\\snedi001\\ArcGIS\\Default.gdb\\places_select_MultipartToSin"
discrepancies = Output_Discrepancy_File
Delete_succeeded = "false"
places_union_Project__3_ = discrepancies
places_union_Project__5_ = places_union_Project__3_
Output_Feature_Class = places_union_Project__5_
places_union_Project__2_ = Output_Feature_Class
Output_Feature_Class__2_ = places_union_Project__2_
discrepancies__2_ = Output_Feature_Class__2_
Output_Feature_Class__4_ = discrepancies__2_
discrepancies__3_ = Output_Feature_Class__4_
Output_Feature_Class__5_ = discrepancies__3_
discrepancies__4_ = Output_Feature_Class__5_
Output_Feature_Class__6_ = discrepancies__4_
Output_Table = Output_Feature_Class__6_

# Process: Union
arcpy.Union_analysis("local_places_49001 #;census_places_49001 #", county_union, "ALL", "", "GAPS")

# Process: Select
arcpy.Select_analysis(county_union, counties_select, Name_Fields__replace_CTYNAME_if_necessary_)

# Process: Multipart To Singlepart
arcpy.MultipartToSinglepart_management(counties_select, counties_select_Singlepart)

# Process: Project
arcpy.Project_management(counties_select_Singlepart, Temporary_Output_File, "PROJCS['North_America_Albers_Equal_Area_Conic',GEOGCS['GCS_North_American_1983',DATUM['D_North_American_1983',SPHEROID['GRS_1980',6378137.0,298.257222101]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]],PROJECTION['Albers'],PARAMETER['False_Easting',0.0],PARAMETER['False_Northing',0.0],PARAMETER['Central_Meridian',-96.0],PARAMETER['Standard_Parallel_1',20.0],PARAMETER['Standard_Parallel_2',60.0],PARAMETER['Latitude_Of_Origin',40.0],UNIT['Meter',1.0]]", "", "", "NO_PRESERVE_SHAPE", "")

# Process: Calculate Areas
arcpy.CalculateAreas_stats(Temporary_Output_File, Output_Discrepancy_File)

# Process: Delete
arcpy.Delete_management(Temporary_Output_File, "")

# Process: Add Field - DISC_ID
arcpy.AddField_management(Output_Discrepancy_File, "DISC_ID", "SHORT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field - MSP
arcpy.AddField_management(discrepancies, "MSP", "TEXT", "", "", "1", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field - COMMENTS
arcpy.AddField_management(places_union_Project__3_, "COMMENTS", "TEXT", "", "", "100", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field - RELATE
arcpy.AddField_management(places_union_Project__5_, "RELATE", "TEXT", "", "", "5", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field - PROCESS
arcpy.AddField_management(Output_Feature_Class, "PROCESS", "TEXT", "", "", "1", "", "NULLABLE", "NON_REQUIRED", "")

# Process: P_COMMENTS
arcpy.AddField_management(places_union_Project__2_, "P_COMMENTS", "TEXT", "", "", "100", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field- VERIFY
arcpy.AddField_management(Output_Feature_Class__2_, "VERIFY", "TEXT", "", "", "1", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field - V_COMMENTS
arcpy.AddField_management(discrepancies__2_, "V_COMMENTS", "TEXT", "", "", "100", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field - DIGITIZE
arcpy.AddField_management(Output_Feature_Class__4_, "DIGITIZE", "TEXT", "", "", "1", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field - D_COMMENTS
arcpy.AddField_management(discrepancies__3_, "D_COMMENTS", "TEXT", "", "", "100", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Add Field - DIG_QA
arcpy.AddField_management(Output_Feature_Class__5_, "DIG_QA", "TEXT", "", "", "1", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Q_COMMENTS
arcpy.AddField_management(discrepancies__4_, "Q_COMMENTS", "TEXT", "", "", "100", "", "NULLABLE", "NON_REQUIRED", "")

# Process: Delete Field - NAME_1
arcpy.DeleteField_management(Output_Feature_Class__6_, "NAME_1")

